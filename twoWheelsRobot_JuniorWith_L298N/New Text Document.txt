#define CUSTOM_SETTINGS
#define INCLUDE_GAMEPAD_MODULE

#include <Dabble.h>

// Motor A - Left Motor
const int in1 = 5;
const int in2 = 6;
const int enA = 3; // PWM

// Motor B - Right Motor
const int in3 = 7;
const int in4 = 8;
const int enB = 11; // PWM

const int motorSpeed = 200; // PWM value (0-255)

void setup() {
  Serial.begin(115200);
  Dabble.begin(9600, 10, 9); // RX = 9, TX = 10

  // Set motor pins as output
  pinMode(in1, OUTPUT);
  pinMode(in2, OUTPUT);
  pinMode(enA, OUTPUT);
  
  pinMode(in3, OUTPUT);
  pinMode(in4, OUTPUT);
  pinMode(enB, OUTPUT);

  Serial.println("Start!");
}

void loop() {.

  if (GamePad.isUpPressed()) {
    Serial.println("Up");
    moveForward();
  }
  else if (GamePad.isDownPressed()) {
    Serial.println("Down");
    moveBackward();
  }
  else if (GamePad.isLeftPressed()) {
    Serial.println("Left");
    turnLeft();
  }
  else if (GamePad.isRightPressed()) {
    Serial.println("Right");
    turnRight();
  }
  else {
    stopMoving();
  }

  if (GamePad.isTrianglePressed()) {
    Serial.println("Triangle");
  }
  else if (GamePad.isSquarePressed()) {
    Serial.println("Square");
  }
  else if (GamePad.isCirclePressed()) {
    Serial.println("Circle");
  }
  else if (GamePad.isCrossPressed()) {
    Serial.println("Cross");
  }

  if (GamePad.isStartPressed()) {
    Serial.println("Start");
  }
  else if (GamePad.isSelectPressed()) {
    Serial.println("Select");
  }
}

// Movement Functions
void moveForward() {
  digitalWrite(in1, HIGH);
  digitalWrite(in2, LOW);
  analogWrite(enA, motorSpeed);

  digitalWrite(in3, HIGH);
  digitalWrite(in4, LOW);
  analogWrite(enB, motorSpeed);
}

void moveBackward() {
  digitalWrite(in1, LOW);
  digitalWrite(in2, HIGH);
  analogWrite(enA, motorSpeed);

  digitalWrite(in3, LOW);
  digitalWrite(in4, HIGH);
  analogWrite(enB, motorSpeed);
}

void turnLeft() {
  digitalWrite(in1, LOW);
  digitalWrite(in2, HIGH);
  analogWrite(enA, motorSpeed);

  digitalWrite(in3, HIGH);
  digitalWrite(in4, LOW);
  analogWrite(enB, motorSpeed);
}

void turnRight() {
  digitalWrite(in1, HIGH);
  digitalWrite(in2, LOW);
  analogWrite(enA, motorSpeed);

  digitalWrite(in3, LOW);
  digitalWrite(in4, HIGH);
  analogWrite(enB, motorSpeed);
}

void stopMoving() {
  analogWrite(enA, 0);
  analogWrite(enB, 0);
}
